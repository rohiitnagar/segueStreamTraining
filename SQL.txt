Aggregate Functions:
---------------------
1) SELECT SUM(purch_amt) FROM orders
2) SELECT Avg(purch_amt) FROM orders
3) SELECT count(distinct salesman_id) 
	FROM orders

4) SELECT count(customer_id) 
	FROM customer
5) SELECT count(grade) 
	FROM customer
6) SELECT max(purch_amt) from orders
7) SELECT min(purch_amt) from orders
8) SELECT  city ,max(grade)  
	FROM customer
	group by city
9) SELECT customer_id , max(purch_amt)
	FROM customer
	GROUP BY customer_id
10) SELECT customer_id,ord_date,MAX(purch_amt) 
	FROM orders 
	GROUP BY customer_id,ord_date;
11) SELECT salesman_id , max(purch_amt) 
	FROM orders 
	WHERE ord_date = '2012-08-17'
	GROUP BY salesman_id
12) SELECT customer_id,ord_date,MAX(purch_amt) 
	FROM orders 
	GROUP BY customer_id,ord_date 
	HAVING MAX(purch_amt)>2000.00;
13) SELECT customer_id , ord_date, MAX(purch_amt)
	FROM orders
	GROUP BY customer_id , ord_date
	HAVING Max(purch_amt) >2000 AND MAx(purch_amt)<6000
14) SELECT customer_id , ord_date, MAX(purch_amt)
	FROM orders
	GROUP BY customer_id , ord_date
	HAVING Max(purch_amt)= 2000 OR MAx(purch_amt)=6000 OR Max(purch_amt)= 3000 OR MAx(purch_amt)=5760
15) SELECT customer_id , MAX(purch_amt)
	FROM orders
	GROUP BY customer_id
	HAVING customer_id BETWEEN 3002 AND 3007
16) SELECT customer_id , MAX(purch_amt)
	FROM orders
	GROUP BY customer_id
	HAVING (customer_id BETWEEN 3002 AND 3007) AND 
	MAX(purch_amt) >1000
17) SELECT salesman_id , MAX(purch_amt)
	FROM orders
	GROUP BY salesman_id
	HAVING salesman_id BETWEEN 5003 AND 5008
18) SELECT count(ord_no) 
	FROM orders 
	WHERE ord_date = '2012-08-17'
19) SELECT count(salesman_id) 
	FROM salesman
20) SELECT ord_date , salesman_id , count(ord_no)
	FROM orders
	GROUP BY ord_date , salesman_id
21) SELECT avg(pro_price)
	FROM item_mast
22) SELECT count(pro_id)
	FROM item_mast
	WHERE pro_price >= 350
23) SELECT avg(pro_price) , pro_com 
	FROM item_mast
	GROUP BY pro_com
24) SELECT SUM(DPT_ALLOTMENT) 
	FROM emp_department
25) SELECT emp_dept , count(emp_idno) 
	FROM emp_details 
	GROUP By emp_dept 
------------------------------------------------
------------------------------------------------
UNION :
-------

1) SELECT salesman_id "ID", name, 'Salesman'
	FROM salesman
	WHERE city='London'
	UNION
	(SELECT customer_id "ID", cust_name, 'Customer'
	FROM customer
	WHERE city='London')
2) SELECT salesman_id, city
	FROM customer
	UNION
	(SELECT salesman_id, city
	FROM salesman)
3) SELECT salesman_id , customer_id FROM orders
	UNION 
	SELECT salesman_id , customer_id 
	FROM customer
4) SELECT a.salesman_id, name, ord_no, 'highest on', ord_date
FROM salesman a, orders b
WHERE a.salesman_id =b.salesman_id
AND b.purch_amt=
	(SELECT MAX (purch_amt)
	FROM orders c
	WHERE c.ord_date = b.ord_date)
UNION
(SELECT a.salesman_id, name, ord_no, 'lowest on', ord_date
FROM salesman a, orders b
WHERE a.salesman_id =b.salesman_id
AND b.purch_amt=
	(SELECT MIN (purch_amt)
	FROM orders c
	WHERE c.ord_date = b.ord_date))

5) SELECT a.salesman_id, name, ord_no, 'highest on', ord_date
FROM salesman a, orders b
WHERE a.salesman_id =b.salesman_id
AND b.purch_amt=
	(SELECT MAX (purch_amt)
	FROM orders c
	WHERE c.ord_date = b.ord_date)
UNION
(SELECT a.salesman_id, name, ord_no, 'lowest on', ord_date
FROM salesman a, orders b
WHERE a.salesman_id =b.salesman_id
AND b.purch_amt=
	(SELECT MIN (purch_amt)
	FROM orders c
	WHERE c.ord_date = b.ord_date))
ORDER BY 3

7) SELECT a.salesman_id, name, a.city, 'MATCHED'
FROM salesman a, customer b
WHERE a.city = b.city
UNION
(SELECT salesman_id, name, city, 'NO MATCH'
FROM salesman
WHERE NOT city = ANY
	(SELECT city
        FROM customer))
ORDER BY 2 DESC

8) SELECT customer_id, city, grade, 'High Rating'
FROM customer
WHERE grade >= 300
UNION
(SELECT customer_id, city, grade, 'Low Rating'
FROM customer
WHERE grade < 300)

9) SELECT customer_id as “ID”,  cust_name as “NAME”
	FROM customer a
	WHERE 1<
		(SELECT COUNT (*)
		   FROM orders b
		   WHERE a.customer_id = b.customer_id)
UNION
(SELECT salesman_idas “ID”,   nameas “NAME”
	FROM salesman a
	WHERE 1 <
		(SELECT COUNT (*)
		 FROM orders b
		WHERE  a.salesman_id = b.salesman_id))
ORDER BY 2

---------------------------------------------------------------------
---------------------------------------------------------------------
JOINS : 
-------
1) SELECT rev_name from reviewer 
INNER JOIN rating ON reviewer.rev_id = rating.rev_id
WHERE rev_stars  IS NULL

2)

